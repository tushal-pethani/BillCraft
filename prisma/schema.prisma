generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String   @unique
  password      String?  // null if user logs in with Google
  provider      String   @default("credentials") // "google" | "credentials"
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // NextAuth relations
  accounts      Account[]
  sessions      Session[]

  // Your app relations
  business      Business?
  invoices      Invoice[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// =============== BILLING MODELS ===============

model Business {
  id        String   @id @default(cuid())
  gstNumber String   @unique
  name      String
  address   String?
  state     String?
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])

  clients   Client[]
}

model Client {
  id        String    @id @default(cuid())
  gstNumber String?   @unique
  name      String
  address   String?
  state     String?

  businessId String
  business   Business @relation(fields: [businessId], references: [id])

  invoices   Invoice[]
}

model Invoice {
  id          String    @id @default(cuid())
  invoiceNo   Int
  date        DateTime  @default(now())
  amount      Float
  taxAmount   Float
  totalAmount Float

  userId    String
  user      User     @relation(fields: [userId], references: [id])

  clientId  String
  client    Client   @relation(fields: [clientId], references: [id])

  items     InvoiceItem[]
}

model InvoiceItem {
  id          String   @id @default(cuid())
  description String
  quantity    Int
  price       Float
  gstRate     Float
  amount      Float

  invoiceId String
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
}